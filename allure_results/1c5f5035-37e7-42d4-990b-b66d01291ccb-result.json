{"name": "test_create_order_with_ingredients", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "self = <test_create_order.TestCreateOrder object at 0x107a5a330>\n\n    def test_create_order_with_ingredients(self):\n        order_data = {\n            \"ingredients\": [\"60d3b41abdacab0026a733c6\", \"609646e4dc916e00276b2870\"]\n        }\n        headers = {\"Authorization\": \"Bearer <accessToken>\"}\n        response = requests.post(f\"{BASE_URL}/orders\", json=order_data, headers=headers)\n>       assert response.status_code == 200  # Успешное создание заказа\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\ntests/test_create_order.py:13: AssertionError"}, "start": 1732752223920, "stop": 1732752224281, "uuid": "b291e228-9432-4f92-b081-53e07ea90005", "historyId": "7c86c6e6b94b01b7af6e86a42ca72c43", "testCaseId": "7c86c6e6b94b01b7af6e86a42ca72c43", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_with_ingredients", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "admins-MacBook-Pro.local"}, {"name": "thread", "value": "23420-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}