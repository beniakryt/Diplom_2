{"name": "test_create_existing_user", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code", "trace": "self = <test_create_user.TestCreateUser object at 0x105edd6a0>\n\n    @allure.feature(\"Создание пользователя\")\n    @allure.story(\"Попытка зарегистрировать уже существующего пользователя\")\n    def test_create_existing_user(self):\n        # Используем заранее подготовленный существующий email\n        existing_user_data = {\n            \"email\": \"yuriibenia@example.com\",  # Используйте email, который вы знаете, что существует\n            \"password\": \"password123\",\n            \"name\": \"Test User\"\n        }\n    \n        # Первый запрос — регистрация с существующим email\n        response = requests.post(f\"{BASE_URL}/auth/register\", json=existing_user_data)\n>       assert response.status_code == 201  # Проверяем, что первый запрос успешен\nE       assert 200 == 201\nE        +  where 200 = <Response [200]>.status_code\n\ntest_create_user.py:35: AssertionError"}, "start": 1732759260179, "stop": 1732759260537, "uuid": "05f2c3a2-40c9-4e2b-9e7c-cfa67d7cf45f", "historyId": "3798aeec73f27a6b274c7f46a1366005", "testCaseId": "3798aeec73f27a6b274c7f46a1366005", "fullName": "tests.test_create_user.TestCreateUser#test_create_existing_user", "labels": [{"name": "feature", "value": "Создание пользователя"}, {"name": "story", "value": "Попытка зарегистрировать уже существующего пользователя"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_user"}, {"name": "subSuite", "value": "TestCreateUser"}, {"name": "host", "value": "admins-MacBook-Pro.local"}, {"name": "thread", "value": "25181-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_user"}]}